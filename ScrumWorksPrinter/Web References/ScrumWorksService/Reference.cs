//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace ScrumWorksPrinter.ScrumWorksService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ScrumWorksEndpointBinding", Namespace="http://api.scrumworks.danube.com/ScrumWorks")]
    public partial class ScrumWorksService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addBacklogItemsToThemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createBacklogItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback createImpedimentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback createThemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteBacklogItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteEmptyReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteEmptySprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTaskEstimateOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteThemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveBacklogItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveBacklogItemsForReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveBacklogItemsForSprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAuthenticatedTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBacklogItemEstimatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBacklogItemsForThemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImpedimentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInactiveBacklogItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReleasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSprintsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskEstimatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback getThemesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback markBacklogItemInactiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback mergeThemesOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveBacklogItemAfterOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveBacklogItemIntoReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveBacklogItemIntoSprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveBacklogItemsAfterOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveBacklogItemsIntoReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveBacklogItemsIntoSprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveReleaseAfterOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveReleaseBeforeOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveTaskAfterOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveTaskIntoBacklogItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveTasksAfterOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveTasksIntoBacklogItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeBacklogItemsFromThemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback renameThemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateBacklogItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateImpedimentOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTaskEstimateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ScrumWorksService() {
            this.Url = global::ScrumWorksPrinter.Properties.Settings.Default.ScrumWorksPrinter_ScrumWorksService_ScrumWorksService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addBacklogItemsToThemeCompletedEventHandler addBacklogItemsToThemeCompleted;
        
        /// <remarks/>
        public event createBacklogItemCompletedEventHandler createBacklogItemCompleted;
        
        /// <remarks/>
        public event createImpedimentCompletedEventHandler createImpedimentCompleted;
        
        /// <remarks/>
        public event createReleaseCompletedEventHandler createReleaseCompleted;
        
        /// <remarks/>
        public event createSprintCompletedEventHandler createSprintCompleted;
        
        /// <remarks/>
        public event createTaskCompletedEventHandler createTaskCompleted;
        
        /// <remarks/>
        public event createThemeCompletedEventHandler createThemeCompleted;
        
        /// <remarks/>
        public event deleteBacklogItemCompletedEventHandler deleteBacklogItemCompleted;
        
        /// <remarks/>
        public event deleteEmptyReleaseCompletedEventHandler deleteEmptyReleaseCompleted;
        
        /// <remarks/>
        public event deleteEmptySprintCompletedEventHandler deleteEmptySprintCompleted;
        
        /// <remarks/>
        public event deleteTaskCompletedEventHandler deleteTaskCompleted;
        
        /// <remarks/>
        public event deleteTaskEstimateCompletedEventHandler deleteTaskEstimateCompleted;
        
        /// <remarks/>
        public event deleteThemeCompletedEventHandler deleteThemeCompleted;
        
        /// <remarks/>
        public event getActiveBacklogItemsCompletedEventHandler getActiveBacklogItemsCompleted;
        
        /// <remarks/>
        public event getActiveBacklogItemsForReleaseCompletedEventHandler getActiveBacklogItemsForReleaseCompleted;
        
        /// <remarks/>
        public event getActiveBacklogItemsForSprintCompletedEventHandler getActiveBacklogItemsForSprintCompleted;
        
        /// <remarks/>
        public event getAuthenticatedTestCompletedEventHandler getAuthenticatedTestCompleted;
        
        /// <remarks/>
        public event getBacklogItemEstimatesCompletedEventHandler getBacklogItemEstimatesCompleted;
        
        /// <remarks/>
        public event getBacklogItemsForThemeCompletedEventHandler getBacklogItemsForThemeCompleted;
        
        /// <remarks/>
        public event getImpedimentsCompletedEventHandler getImpedimentsCompleted;
        
        /// <remarks/>
        public event getInactiveBacklogItemsCompletedEventHandler getInactiveBacklogItemsCompleted;
        
        /// <remarks/>
        public event getProductsCompletedEventHandler getProductsCompleted;
        
        /// <remarks/>
        public event getReleasesCompletedEventHandler getReleasesCompleted;
        
        /// <remarks/>
        public event getSprintsCompletedEventHandler getSprintsCompleted;
        
        /// <remarks/>
        public event getTaskEstimatesCompletedEventHandler getTaskEstimatesCompleted;
        
        /// <remarks/>
        public event getTasksCompletedEventHandler getTasksCompleted;
        
        /// <remarks/>
        public event getTeamMembersCompletedEventHandler getTeamMembersCompleted;
        
        /// <remarks/>
        public event getTeamsCompletedEventHandler getTeamsCompleted;
        
        /// <remarks/>
        public event getTestCompletedEventHandler getTestCompleted;
        
        /// <remarks/>
        public event getThemesCompletedEventHandler getThemesCompleted;
        
        /// <remarks/>
        public event getUsersCompletedEventHandler getUsersCompleted;
        
        /// <remarks/>
        public event markBacklogItemInactiveCompletedEventHandler markBacklogItemInactiveCompleted;
        
        /// <remarks/>
        public event mergeThemesCompletedEventHandler mergeThemesCompleted;
        
        /// <remarks/>
        public event moveBacklogItemAfterCompletedEventHandler moveBacklogItemAfterCompleted;
        
        /// <remarks/>
        public event moveBacklogItemIntoReleaseCompletedEventHandler moveBacklogItemIntoReleaseCompleted;
        
        /// <remarks/>
        public event moveBacklogItemIntoSprintCompletedEventHandler moveBacklogItemIntoSprintCompleted;
        
        /// <remarks/>
        public event moveBacklogItemsAfterCompletedEventHandler moveBacklogItemsAfterCompleted;
        
        /// <remarks/>
        public event moveBacklogItemsIntoReleaseCompletedEventHandler moveBacklogItemsIntoReleaseCompleted;
        
        /// <remarks/>
        public event moveBacklogItemsIntoSprintCompletedEventHandler moveBacklogItemsIntoSprintCompleted;
        
        /// <remarks/>
        public event moveReleaseAfterCompletedEventHandler moveReleaseAfterCompleted;
        
        /// <remarks/>
        public event moveReleaseBeforeCompletedEventHandler moveReleaseBeforeCompleted;
        
        /// <remarks/>
        public event moveTaskAfterCompletedEventHandler moveTaskAfterCompleted;
        
        /// <remarks/>
        public event moveTaskIntoBacklogItemCompletedEventHandler moveTaskIntoBacklogItemCompleted;
        
        /// <remarks/>
        public event moveTasksAfterCompletedEventHandler moveTasksAfterCompleted;
        
        /// <remarks/>
        public event moveTasksIntoBacklogItemCompletedEventHandler moveTasksIntoBacklogItemCompleted;
        
        /// <remarks/>
        public event removeBacklogItemsFromThemeCompletedEventHandler removeBacklogItemsFromThemeCompleted;
        
        /// <remarks/>
        public event renameThemeCompletedEventHandler renameThemeCompleted;
        
        /// <remarks/>
        public event updateBacklogItemCompletedEventHandler updateBacklogItemCompleted;
        
        /// <remarks/>
        public event updateImpedimentCompletedEventHandler updateImpedimentCompleted;
        
        /// <remarks/>
        public event updateReleaseCompletedEventHandler updateReleaseCompleted;
        
        /// <remarks/>
        public event updateSprintCompletedEventHandler updateSprintCompleted;
        
        /// <remarks/>
        public event updateTaskCompletedEventHandler updateTaskCompleted;
        
        /// <remarks/>
        public event updateTaskEstimateCompletedEventHandler updateTaskEstimateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("addBacklogItemsToThemeResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public addBacklogItemsToThemeResponse addBacklogItemsToTheme([System.Xml.Serialization.XmlElementAttribute("addBacklogItemsToTheme", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] addBacklogItemsToTheme addBacklogItemsToTheme1) {
            object[] results = this.Invoke("addBacklogItemsToTheme", new object[] {
                        addBacklogItemsToTheme1});
            return ((addBacklogItemsToThemeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void addBacklogItemsToThemeAsync(addBacklogItemsToTheme addBacklogItemsToTheme1) {
            this.addBacklogItemsToThemeAsync(addBacklogItemsToTheme1, null);
        }
        
        /// <remarks/>
        public void addBacklogItemsToThemeAsync(addBacklogItemsToTheme addBacklogItemsToTheme1, object userState) {
            if ((this.addBacklogItemsToThemeOperationCompleted == null)) {
                this.addBacklogItemsToThemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddBacklogItemsToThemeOperationCompleted);
            }
            this.InvokeAsync("addBacklogItemsToTheme", new object[] {
                        addBacklogItemsToTheme1}, this.addBacklogItemsToThemeOperationCompleted, userState);
        }
        
        private void OnaddBacklogItemsToThemeOperationCompleted(object arg) {
            if ((this.addBacklogItemsToThemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addBacklogItemsToThemeCompleted(this, new addBacklogItemsToThemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("createBacklogItemResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public createBacklogItemResponse createBacklogItem([System.Xml.Serialization.XmlElementAttribute("createBacklogItem", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] createBacklogItem createBacklogItem1) {
            object[] results = this.Invoke("createBacklogItem", new object[] {
                        createBacklogItem1});
            return ((createBacklogItemResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createBacklogItemAsync(createBacklogItem createBacklogItem1) {
            this.createBacklogItemAsync(createBacklogItem1, null);
        }
        
        /// <remarks/>
        public void createBacklogItemAsync(createBacklogItem createBacklogItem1, object userState) {
            if ((this.createBacklogItemOperationCompleted == null)) {
                this.createBacklogItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateBacklogItemOperationCompleted);
            }
            this.InvokeAsync("createBacklogItem", new object[] {
                        createBacklogItem1}, this.createBacklogItemOperationCompleted, userState);
        }
        
        private void OncreateBacklogItemOperationCompleted(object arg) {
            if ((this.createBacklogItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createBacklogItemCompleted(this, new createBacklogItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("createImpedimentResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public createImpedimentResponse createImpediment([System.Xml.Serialization.XmlElementAttribute("createImpediment", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] createImpediment createImpediment1) {
            object[] results = this.Invoke("createImpediment", new object[] {
                        createImpediment1});
            return ((createImpedimentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createImpedimentAsync(createImpediment createImpediment1) {
            this.createImpedimentAsync(createImpediment1, null);
        }
        
        /// <remarks/>
        public void createImpedimentAsync(createImpediment createImpediment1, object userState) {
            if ((this.createImpedimentOperationCompleted == null)) {
                this.createImpedimentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateImpedimentOperationCompleted);
            }
            this.InvokeAsync("createImpediment", new object[] {
                        createImpediment1}, this.createImpedimentOperationCompleted, userState);
        }
        
        private void OncreateImpedimentOperationCompleted(object arg) {
            if ((this.createImpedimentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createImpedimentCompleted(this, new createImpedimentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("createReleaseResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public createReleaseResponse createRelease([System.Xml.Serialization.XmlElementAttribute("createRelease", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] createRelease createRelease1) {
            object[] results = this.Invoke("createRelease", new object[] {
                        createRelease1});
            return ((createReleaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createReleaseAsync(createRelease createRelease1) {
            this.createReleaseAsync(createRelease1, null);
        }
        
        /// <remarks/>
        public void createReleaseAsync(createRelease createRelease1, object userState) {
            if ((this.createReleaseOperationCompleted == null)) {
                this.createReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateReleaseOperationCompleted);
            }
            this.InvokeAsync("createRelease", new object[] {
                        createRelease1}, this.createReleaseOperationCompleted, userState);
        }
        
        private void OncreateReleaseOperationCompleted(object arg) {
            if ((this.createReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createReleaseCompleted(this, new createReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("createSprintResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public createSprintResponse createSprint([System.Xml.Serialization.XmlElementAttribute("createSprint", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] createSprint createSprint1) {
            object[] results = this.Invoke("createSprint", new object[] {
                        createSprint1});
            return ((createSprintResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createSprintAsync(createSprint createSprint1) {
            this.createSprintAsync(createSprint1, null);
        }
        
        /// <remarks/>
        public void createSprintAsync(createSprint createSprint1, object userState) {
            if ((this.createSprintOperationCompleted == null)) {
                this.createSprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSprintOperationCompleted);
            }
            this.InvokeAsync("createSprint", new object[] {
                        createSprint1}, this.createSprintOperationCompleted, userState);
        }
        
        private void OncreateSprintOperationCompleted(object arg) {
            if ((this.createSprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSprintCompleted(this, new createSprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("createTaskResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public createTaskResponse createTask([System.Xml.Serialization.XmlElementAttribute("createTask", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] createTask createTask1) {
            object[] results = this.Invoke("createTask", new object[] {
                        createTask1});
            return ((createTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createTaskAsync(createTask createTask1) {
            this.createTaskAsync(createTask1, null);
        }
        
        /// <remarks/>
        public void createTaskAsync(createTask createTask1, object userState) {
            if ((this.createTaskOperationCompleted == null)) {
                this.createTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTaskOperationCompleted);
            }
            this.InvokeAsync("createTask", new object[] {
                        createTask1}, this.createTaskOperationCompleted, userState);
        }
        
        private void OncreateTaskOperationCompleted(object arg) {
            if ((this.createTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTaskCompleted(this, new createTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("createThemeResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public createThemeResponse createTheme([System.Xml.Serialization.XmlElementAttribute("createTheme", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] createTheme createTheme1) {
            object[] results = this.Invoke("createTheme", new object[] {
                        createTheme1});
            return ((createThemeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createThemeAsync(createTheme createTheme1) {
            this.createThemeAsync(createTheme1, null);
        }
        
        /// <remarks/>
        public void createThemeAsync(createTheme createTheme1, object userState) {
            if ((this.createThemeOperationCompleted == null)) {
                this.createThemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateThemeOperationCompleted);
            }
            this.InvokeAsync("createTheme", new object[] {
                        createTheme1}, this.createThemeOperationCompleted, userState);
        }
        
        private void OncreateThemeOperationCompleted(object arg) {
            if ((this.createThemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createThemeCompleted(this, new createThemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteBacklogItemResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public deleteBacklogItemResponse deleteBacklogItem([System.Xml.Serialization.XmlElementAttribute("deleteBacklogItem", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] deleteBacklogItem deleteBacklogItem1) {
            object[] results = this.Invoke("deleteBacklogItem", new object[] {
                        deleteBacklogItem1});
            return ((deleteBacklogItemResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteBacklogItemAsync(deleteBacklogItem deleteBacklogItem1) {
            this.deleteBacklogItemAsync(deleteBacklogItem1, null);
        }
        
        /// <remarks/>
        public void deleteBacklogItemAsync(deleteBacklogItem deleteBacklogItem1, object userState) {
            if ((this.deleteBacklogItemOperationCompleted == null)) {
                this.deleteBacklogItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteBacklogItemOperationCompleted);
            }
            this.InvokeAsync("deleteBacklogItem", new object[] {
                        deleteBacklogItem1}, this.deleteBacklogItemOperationCompleted, userState);
        }
        
        private void OndeleteBacklogItemOperationCompleted(object arg) {
            if ((this.deleteBacklogItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteBacklogItemCompleted(this, new deleteBacklogItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteEmptyReleaseResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public deleteEmptyReleaseResponse deleteEmptyRelease([System.Xml.Serialization.XmlElementAttribute("deleteEmptyRelease", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] deleteEmptyRelease deleteEmptyRelease1) {
            object[] results = this.Invoke("deleteEmptyRelease", new object[] {
                        deleteEmptyRelease1});
            return ((deleteEmptyReleaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteEmptyReleaseAsync(deleteEmptyRelease deleteEmptyRelease1) {
            this.deleteEmptyReleaseAsync(deleteEmptyRelease1, null);
        }
        
        /// <remarks/>
        public void deleteEmptyReleaseAsync(deleteEmptyRelease deleteEmptyRelease1, object userState) {
            if ((this.deleteEmptyReleaseOperationCompleted == null)) {
                this.deleteEmptyReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEmptyReleaseOperationCompleted);
            }
            this.InvokeAsync("deleteEmptyRelease", new object[] {
                        deleteEmptyRelease1}, this.deleteEmptyReleaseOperationCompleted, userState);
        }
        
        private void OndeleteEmptyReleaseOperationCompleted(object arg) {
            if ((this.deleteEmptyReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEmptyReleaseCompleted(this, new deleteEmptyReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteEmptySprintResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public deleteEmptySprintResponse deleteEmptySprint([System.Xml.Serialization.XmlElementAttribute("deleteEmptySprint", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] deleteEmptySprint deleteEmptySprint1) {
            object[] results = this.Invoke("deleteEmptySprint", new object[] {
                        deleteEmptySprint1});
            return ((deleteEmptySprintResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteEmptySprintAsync(deleteEmptySprint deleteEmptySprint1) {
            this.deleteEmptySprintAsync(deleteEmptySprint1, null);
        }
        
        /// <remarks/>
        public void deleteEmptySprintAsync(deleteEmptySprint deleteEmptySprint1, object userState) {
            if ((this.deleteEmptySprintOperationCompleted == null)) {
                this.deleteEmptySprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEmptySprintOperationCompleted);
            }
            this.InvokeAsync("deleteEmptySprint", new object[] {
                        deleteEmptySprint1}, this.deleteEmptySprintOperationCompleted, userState);
        }
        
        private void OndeleteEmptySprintOperationCompleted(object arg) {
            if ((this.deleteEmptySprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEmptySprintCompleted(this, new deleteEmptySprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteTaskResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public deleteTaskResponse deleteTask([System.Xml.Serialization.XmlElementAttribute("deleteTask", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] deleteTask deleteTask1) {
            object[] results = this.Invoke("deleteTask", new object[] {
                        deleteTask1});
            return ((deleteTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTaskAsync(deleteTask deleteTask1) {
            this.deleteTaskAsync(deleteTask1, null);
        }
        
        /// <remarks/>
        public void deleteTaskAsync(deleteTask deleteTask1, object userState) {
            if ((this.deleteTaskOperationCompleted == null)) {
                this.deleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTaskOperationCompleted);
            }
            this.InvokeAsync("deleteTask", new object[] {
                        deleteTask1}, this.deleteTaskOperationCompleted, userState);
        }
        
        private void OndeleteTaskOperationCompleted(object arg) {
            if ((this.deleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTaskCompleted(this, new deleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteTaskEstimateResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public deleteTaskEstimateResponse deleteTaskEstimate([System.Xml.Serialization.XmlElementAttribute("deleteTaskEstimate", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] deleteTaskEstimate deleteTaskEstimate1) {
            object[] results = this.Invoke("deleteTaskEstimate", new object[] {
                        deleteTaskEstimate1});
            return ((deleteTaskEstimateResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTaskEstimateAsync(deleteTaskEstimate deleteTaskEstimate1) {
            this.deleteTaskEstimateAsync(deleteTaskEstimate1, null);
        }
        
        /// <remarks/>
        public void deleteTaskEstimateAsync(deleteTaskEstimate deleteTaskEstimate1, object userState) {
            if ((this.deleteTaskEstimateOperationCompleted == null)) {
                this.deleteTaskEstimateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTaskEstimateOperationCompleted);
            }
            this.InvokeAsync("deleteTaskEstimate", new object[] {
                        deleteTaskEstimate1}, this.deleteTaskEstimateOperationCompleted, userState);
        }
        
        private void OndeleteTaskEstimateOperationCompleted(object arg) {
            if ((this.deleteTaskEstimateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTaskEstimateCompleted(this, new deleteTaskEstimateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteThemeResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public deleteThemeResponse deleteTheme([System.Xml.Serialization.XmlElementAttribute("deleteTheme", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] deleteTheme deleteTheme1) {
            object[] results = this.Invoke("deleteTheme", new object[] {
                        deleteTheme1});
            return ((deleteThemeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteThemeAsync(deleteTheme deleteTheme1) {
            this.deleteThemeAsync(deleteTheme1, null);
        }
        
        /// <remarks/>
        public void deleteThemeAsync(deleteTheme deleteTheme1, object userState) {
            if ((this.deleteThemeOperationCompleted == null)) {
                this.deleteThemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteThemeOperationCompleted);
            }
            this.InvokeAsync("deleteTheme", new object[] {
                        deleteTheme1}, this.deleteThemeOperationCompleted, userState);
        }
        
        private void OndeleteThemeOperationCompleted(object arg) {
            if ((this.deleteThemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteThemeCompleted(this, new deleteThemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getActiveBacklogItemsResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BacklogItemWSO[] getActiveBacklogItems([System.Xml.Serialization.XmlElementAttribute("getActiveBacklogItems", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getActiveBacklogItems getActiveBacklogItems1) {
            object[] results = this.Invoke("getActiveBacklogItems", new object[] {
                        getActiveBacklogItems1});
            return ((BacklogItemWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveBacklogItemsAsync(getActiveBacklogItems getActiveBacklogItems1) {
            this.getActiveBacklogItemsAsync(getActiveBacklogItems1, null);
        }
        
        /// <remarks/>
        public void getActiveBacklogItemsAsync(getActiveBacklogItems getActiveBacklogItems1, object userState) {
            if ((this.getActiveBacklogItemsOperationCompleted == null)) {
                this.getActiveBacklogItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveBacklogItemsOperationCompleted);
            }
            this.InvokeAsync("getActiveBacklogItems", new object[] {
                        getActiveBacklogItems1}, this.getActiveBacklogItemsOperationCompleted, userState);
        }
        
        private void OngetActiveBacklogItemsOperationCompleted(object arg) {
            if ((this.getActiveBacklogItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveBacklogItemsCompleted(this, new getActiveBacklogItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getActiveBacklogItemsForReleaseResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BacklogItemWSO[] getActiveBacklogItemsForRelease([System.Xml.Serialization.XmlElementAttribute("getActiveBacklogItemsForRelease", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getActiveBacklogItemsForRelease getActiveBacklogItemsForRelease1) {
            object[] results = this.Invoke("getActiveBacklogItemsForRelease", new object[] {
                        getActiveBacklogItemsForRelease1});
            return ((BacklogItemWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveBacklogItemsForReleaseAsync(getActiveBacklogItemsForRelease getActiveBacklogItemsForRelease1) {
            this.getActiveBacklogItemsForReleaseAsync(getActiveBacklogItemsForRelease1, null);
        }
        
        /// <remarks/>
        public void getActiveBacklogItemsForReleaseAsync(getActiveBacklogItemsForRelease getActiveBacklogItemsForRelease1, object userState) {
            if ((this.getActiveBacklogItemsForReleaseOperationCompleted == null)) {
                this.getActiveBacklogItemsForReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveBacklogItemsForReleaseOperationCompleted);
            }
            this.InvokeAsync("getActiveBacklogItemsForRelease", new object[] {
                        getActiveBacklogItemsForRelease1}, this.getActiveBacklogItemsForReleaseOperationCompleted, userState);
        }
        
        private void OngetActiveBacklogItemsForReleaseOperationCompleted(object arg) {
            if ((this.getActiveBacklogItemsForReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveBacklogItemsForReleaseCompleted(this, new getActiveBacklogItemsForReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getActiveBacklogItemsForSprintResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BacklogItemWSO[] getActiveBacklogItemsForSprint([System.Xml.Serialization.XmlElementAttribute("getActiveBacklogItemsForSprint", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getActiveBacklogItemsForSprint getActiveBacklogItemsForSprint1) {
            object[] results = this.Invoke("getActiveBacklogItemsForSprint", new object[] {
                        getActiveBacklogItemsForSprint1});
            return ((BacklogItemWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveBacklogItemsForSprintAsync(getActiveBacklogItemsForSprint getActiveBacklogItemsForSprint1) {
            this.getActiveBacklogItemsForSprintAsync(getActiveBacklogItemsForSprint1, null);
        }
        
        /// <remarks/>
        public void getActiveBacklogItemsForSprintAsync(getActiveBacklogItemsForSprint getActiveBacklogItemsForSprint1, object userState) {
            if ((this.getActiveBacklogItemsForSprintOperationCompleted == null)) {
                this.getActiveBacklogItemsForSprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveBacklogItemsForSprintOperationCompleted);
            }
            this.InvokeAsync("getActiveBacklogItemsForSprint", new object[] {
                        getActiveBacklogItemsForSprint1}, this.getActiveBacklogItemsForSprintOperationCompleted, userState);
        }
        
        private void OngetActiveBacklogItemsForSprintOperationCompleted(object arg) {
            if ((this.getActiveBacklogItemsForSprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveBacklogItemsForSprintCompleted(this, new getActiveBacklogItemsForSprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAuthenticatedTestResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public getAuthenticatedTestResponse getAuthenticatedTest([System.Xml.Serialization.XmlElementAttribute("getAuthenticatedTest", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getAuthenticatedTest getAuthenticatedTest1) {
            object[] results = this.Invoke("getAuthenticatedTest", new object[] {
                        getAuthenticatedTest1});
            return ((getAuthenticatedTestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getAuthenticatedTestAsync(getAuthenticatedTest getAuthenticatedTest1) {
            this.getAuthenticatedTestAsync(getAuthenticatedTest1, null);
        }
        
        /// <remarks/>
        public void getAuthenticatedTestAsync(getAuthenticatedTest getAuthenticatedTest1, object userState) {
            if ((this.getAuthenticatedTestOperationCompleted == null)) {
                this.getAuthenticatedTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAuthenticatedTestOperationCompleted);
            }
            this.InvokeAsync("getAuthenticatedTest", new object[] {
                        getAuthenticatedTest1}, this.getAuthenticatedTestOperationCompleted, userState);
        }
        
        private void OngetAuthenticatedTestOperationCompleted(object arg) {
            if ((this.getAuthenticatedTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAuthenticatedTestCompleted(this, new getAuthenticatedTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getBacklogItemEstimatesResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BacklogItemEstimateWSO[] getBacklogItemEstimates([System.Xml.Serialization.XmlElementAttribute("getBacklogItemEstimates", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getBacklogItemEstimates getBacklogItemEstimates1) {
            object[] results = this.Invoke("getBacklogItemEstimates", new object[] {
                        getBacklogItemEstimates1});
            return ((BacklogItemEstimateWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getBacklogItemEstimatesAsync(getBacklogItemEstimates getBacklogItemEstimates1) {
            this.getBacklogItemEstimatesAsync(getBacklogItemEstimates1, null);
        }
        
        /// <remarks/>
        public void getBacklogItemEstimatesAsync(getBacklogItemEstimates getBacklogItemEstimates1, object userState) {
            if ((this.getBacklogItemEstimatesOperationCompleted == null)) {
                this.getBacklogItemEstimatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBacklogItemEstimatesOperationCompleted);
            }
            this.InvokeAsync("getBacklogItemEstimates", new object[] {
                        getBacklogItemEstimates1}, this.getBacklogItemEstimatesOperationCompleted, userState);
        }
        
        private void OngetBacklogItemEstimatesOperationCompleted(object arg) {
            if ((this.getBacklogItemEstimatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBacklogItemEstimatesCompleted(this, new getBacklogItemEstimatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getBacklogItemsForThemeResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BacklogItemWSO[] getBacklogItemsForTheme([System.Xml.Serialization.XmlElementAttribute("getBacklogItemsForTheme", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getBacklogItemsForTheme getBacklogItemsForTheme1) {
            object[] results = this.Invoke("getBacklogItemsForTheme", new object[] {
                        getBacklogItemsForTheme1});
            return ((BacklogItemWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getBacklogItemsForThemeAsync(getBacklogItemsForTheme getBacklogItemsForTheme1) {
            this.getBacklogItemsForThemeAsync(getBacklogItemsForTheme1, null);
        }
        
        /// <remarks/>
        public void getBacklogItemsForThemeAsync(getBacklogItemsForTheme getBacklogItemsForTheme1, object userState) {
            if ((this.getBacklogItemsForThemeOperationCompleted == null)) {
                this.getBacklogItemsForThemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBacklogItemsForThemeOperationCompleted);
            }
            this.InvokeAsync("getBacklogItemsForTheme", new object[] {
                        getBacklogItemsForTheme1}, this.getBacklogItemsForThemeOperationCompleted, userState);
        }
        
        private void OngetBacklogItemsForThemeOperationCompleted(object arg) {
            if ((this.getBacklogItemsForThemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBacklogItemsForThemeCompleted(this, new getBacklogItemsForThemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getImpedimentsResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ImpedimentWSO[] getImpediments([System.Xml.Serialization.XmlElementAttribute("getImpediments", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getImpediments getImpediments1) {
            object[] results = this.Invoke("getImpediments", new object[] {
                        getImpediments1});
            return ((ImpedimentWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getImpedimentsAsync(getImpediments getImpediments1) {
            this.getImpedimentsAsync(getImpediments1, null);
        }
        
        /// <remarks/>
        public void getImpedimentsAsync(getImpediments getImpediments1, object userState) {
            if ((this.getImpedimentsOperationCompleted == null)) {
                this.getImpedimentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImpedimentsOperationCompleted);
            }
            this.InvokeAsync("getImpediments", new object[] {
                        getImpediments1}, this.getImpedimentsOperationCompleted, userState);
        }
        
        private void OngetImpedimentsOperationCompleted(object arg) {
            if ((this.getImpedimentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImpedimentsCompleted(this, new getImpedimentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getInactiveBacklogItemsResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BacklogItemWSO[] getInactiveBacklogItems([System.Xml.Serialization.XmlElementAttribute("getInactiveBacklogItems", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getInactiveBacklogItems getInactiveBacklogItems1) {
            object[] results = this.Invoke("getInactiveBacklogItems", new object[] {
                        getInactiveBacklogItems1});
            return ((BacklogItemWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getInactiveBacklogItemsAsync(getInactiveBacklogItems getInactiveBacklogItems1) {
            this.getInactiveBacklogItemsAsync(getInactiveBacklogItems1, null);
        }
        
        /// <remarks/>
        public void getInactiveBacklogItemsAsync(getInactiveBacklogItems getInactiveBacklogItems1, object userState) {
            if ((this.getInactiveBacklogItemsOperationCompleted == null)) {
                this.getInactiveBacklogItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInactiveBacklogItemsOperationCompleted);
            }
            this.InvokeAsync("getInactiveBacklogItems", new object[] {
                        getInactiveBacklogItems1}, this.getInactiveBacklogItemsOperationCompleted, userState);
        }
        
        private void OngetInactiveBacklogItemsOperationCompleted(object arg) {
            if ((this.getInactiveBacklogItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInactiveBacklogItemsCompleted(this, new getInactiveBacklogItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getProductsResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ProductWSO[] getProducts([System.Xml.Serialization.XmlElementAttribute("getProducts", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getProducts getProducts1) {
            object[] results = this.Invoke("getProducts", new object[] {
                        getProducts1});
            return ((ProductWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getProductsAsync(getProducts getProducts1) {
            this.getProductsAsync(getProducts1, null);
        }
        
        /// <remarks/>
        public void getProductsAsync(getProducts getProducts1, object userState) {
            if ((this.getProductsOperationCompleted == null)) {
                this.getProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductsOperationCompleted);
            }
            this.InvokeAsync("getProducts", new object[] {
                        getProducts1}, this.getProductsOperationCompleted, userState);
        }
        
        private void OngetProductsOperationCompleted(object arg) {
            if ((this.getProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductsCompleted(this, new getProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getReleasesResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReleaseWSO[] getReleases([System.Xml.Serialization.XmlElementAttribute("getReleases", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getReleases getReleases1) {
            object[] results = this.Invoke("getReleases", new object[] {
                        getReleases1});
            return ((ReleaseWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getReleasesAsync(getReleases getReleases1) {
            this.getReleasesAsync(getReleases1, null);
        }
        
        /// <remarks/>
        public void getReleasesAsync(getReleases getReleases1, object userState) {
            if ((this.getReleasesOperationCompleted == null)) {
                this.getReleasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReleasesOperationCompleted);
            }
            this.InvokeAsync("getReleases", new object[] {
                        getReleases1}, this.getReleasesOperationCompleted, userState);
        }
        
        private void OngetReleasesOperationCompleted(object arg) {
            if ((this.getReleasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReleasesCompleted(this, new getReleasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getSprintsResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SprintWSO[] getSprints([System.Xml.Serialization.XmlElementAttribute("getSprints", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getSprints getSprints1) {
            object[] results = this.Invoke("getSprints", new object[] {
                        getSprints1});
            return ((SprintWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getSprintsAsync(getSprints getSprints1) {
            this.getSprintsAsync(getSprints1, null);
        }
        
        /// <remarks/>
        public void getSprintsAsync(getSprints getSprints1, object userState) {
            if ((this.getSprintsOperationCompleted == null)) {
                this.getSprintsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSprintsOperationCompleted);
            }
            this.InvokeAsync("getSprints", new object[] {
                        getSprints1}, this.getSprintsOperationCompleted, userState);
        }
        
        private void OngetSprintsOperationCompleted(object arg) {
            if ((this.getSprintsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSprintsCompleted(this, new getSprintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getTaskEstimatesResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskEstimateWSO[] getTaskEstimates([System.Xml.Serialization.XmlElementAttribute("getTaskEstimates", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getTaskEstimates getTaskEstimates1) {
            object[] results = this.Invoke("getTaskEstimates", new object[] {
                        getTaskEstimates1});
            return ((TaskEstimateWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskEstimatesAsync(getTaskEstimates getTaskEstimates1) {
            this.getTaskEstimatesAsync(getTaskEstimates1, null);
        }
        
        /// <remarks/>
        public void getTaskEstimatesAsync(getTaskEstimates getTaskEstimates1, object userState) {
            if ((this.getTaskEstimatesOperationCompleted == null)) {
                this.getTaskEstimatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskEstimatesOperationCompleted);
            }
            this.InvokeAsync("getTaskEstimates", new object[] {
                        getTaskEstimates1}, this.getTaskEstimatesOperationCompleted, userState);
        }
        
        private void OngetTaskEstimatesOperationCompleted(object arg) {
            if ((this.getTaskEstimatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskEstimatesCompleted(this, new getTaskEstimatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getTasksResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskWSO[] getTasks([System.Xml.Serialization.XmlElementAttribute("getTasks", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getTasks getTasks1) {
            object[] results = this.Invoke("getTasks", new object[] {
                        getTasks1});
            return ((TaskWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getTasksAsync(getTasks getTasks1) {
            this.getTasksAsync(getTasks1, null);
        }
        
        /// <remarks/>
        public void getTasksAsync(getTasks getTasks1, object userState) {
            if ((this.getTasksOperationCompleted == null)) {
                this.getTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTasksOperationCompleted);
            }
            this.InvokeAsync("getTasks", new object[] {
                        getTasks1}, this.getTasksOperationCompleted, userState);
        }
        
        private void OngetTasksOperationCompleted(object arg) {
            if ((this.getTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTasksCompleted(this, new getTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getTeamMembersResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserWSO[] getTeamMembers([System.Xml.Serialization.XmlElementAttribute("getTeamMembers", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getTeamMembers getTeamMembers1) {
            object[] results = this.Invoke("getTeamMembers", new object[] {
                        getTeamMembers1});
            return ((UserWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getTeamMembersAsync(getTeamMembers getTeamMembers1) {
            this.getTeamMembersAsync(getTeamMembers1, null);
        }
        
        /// <remarks/>
        public void getTeamMembersAsync(getTeamMembers getTeamMembers1, object userState) {
            if ((this.getTeamMembersOperationCompleted == null)) {
                this.getTeamMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamMembersOperationCompleted);
            }
            this.InvokeAsync("getTeamMembers", new object[] {
                        getTeamMembers1}, this.getTeamMembersOperationCompleted, userState);
        }
        
        private void OngetTeamMembersOperationCompleted(object arg) {
            if ((this.getTeamMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamMembersCompleted(this, new getTeamMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getTeamsResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TeamWSO[] getTeams([System.Xml.Serialization.XmlElementAttribute("getTeams", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getTeams getTeams1) {
            object[] results = this.Invoke("getTeams", new object[] {
                        getTeams1});
            return ((TeamWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getTeamsAsync(getTeams getTeams1) {
            this.getTeamsAsync(getTeams1, null);
        }
        
        /// <remarks/>
        public void getTeamsAsync(getTeams getTeams1, object userState) {
            if ((this.getTeamsOperationCompleted == null)) {
                this.getTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamsOperationCompleted);
            }
            this.InvokeAsync("getTeams", new object[] {
                        getTeams1}, this.getTeamsOperationCompleted, userState);
        }
        
        private void OngetTeamsOperationCompleted(object arg) {
            if ((this.getTeamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamsCompleted(this, new getTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTestResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public getTestResponse getTest([System.Xml.Serialization.XmlElementAttribute("getTest", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getTest getTest1) {
            object[] results = this.Invoke("getTest", new object[] {
                        getTest1});
            return ((getTestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getTestAsync(getTest getTest1) {
            this.getTestAsync(getTest1, null);
        }
        
        /// <remarks/>
        public void getTestAsync(getTest getTest1, object userState) {
            if ((this.getTestOperationCompleted == null)) {
                this.getTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestOperationCompleted);
            }
            this.InvokeAsync("getTest", new object[] {
                        getTest1}, this.getTestOperationCompleted, userState);
        }
        
        private void OngetTestOperationCompleted(object arg) {
            if ((this.getTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestCompleted(this, new getTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getThemesResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ThemeWSO[] getThemes([System.Xml.Serialization.XmlElementAttribute("getThemes", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getThemes getThemes1) {
            object[] results = this.Invoke("getThemes", new object[] {
                        getThemes1});
            return ((ThemeWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getThemesAsync(getThemes getThemes1) {
            this.getThemesAsync(getThemes1, null);
        }
        
        /// <remarks/>
        public void getThemesAsync(getThemes getThemes1, object userState) {
            if ((this.getThemesOperationCompleted == null)) {
                this.getThemesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetThemesOperationCompleted);
            }
            this.InvokeAsync("getThemes", new object[] {
                        getThemes1}, this.getThemesOperationCompleted, userState);
        }
        
        private void OngetThemesOperationCompleted(object arg) {
            if ((this.getThemesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getThemesCompleted(this, new getThemesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getUsersResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserWSO[] getUsers([System.Xml.Serialization.XmlElementAttribute("getUsers", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] getUsers getUsers1) {
            object[] results = this.Invoke("getUsers", new object[] {
                        getUsers1});
            return ((UserWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void getUsersAsync(getUsers getUsers1) {
            this.getUsersAsync(getUsers1, null);
        }
        
        /// <remarks/>
        public void getUsersAsync(getUsers getUsers1, object userState) {
            if ((this.getUsersOperationCompleted == null)) {
                this.getUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersOperationCompleted);
            }
            this.InvokeAsync("getUsers", new object[] {
                        getUsers1}, this.getUsersOperationCompleted, userState);
        }
        
        private void OngetUsersOperationCompleted(object arg) {
            if ((this.getUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersCompleted(this, new getUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("markBacklogItemInactiveResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public markBacklogItemInactiveResponse markBacklogItemInactive([System.Xml.Serialization.XmlElementAttribute("markBacklogItemInactive", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] markBacklogItemInactive markBacklogItemInactive1) {
            object[] results = this.Invoke("markBacklogItemInactive", new object[] {
                        markBacklogItemInactive1});
            return ((markBacklogItemInactiveResponse)(results[0]));
        }
        
        /// <remarks/>
        public void markBacklogItemInactiveAsync(markBacklogItemInactive markBacklogItemInactive1) {
            this.markBacklogItemInactiveAsync(markBacklogItemInactive1, null);
        }
        
        /// <remarks/>
        public void markBacklogItemInactiveAsync(markBacklogItemInactive markBacklogItemInactive1, object userState) {
            if ((this.markBacklogItemInactiveOperationCompleted == null)) {
                this.markBacklogItemInactiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmarkBacklogItemInactiveOperationCompleted);
            }
            this.InvokeAsync("markBacklogItemInactive", new object[] {
                        markBacklogItemInactive1}, this.markBacklogItemInactiveOperationCompleted, userState);
        }
        
        private void OnmarkBacklogItemInactiveOperationCompleted(object arg) {
            if ((this.markBacklogItemInactiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.markBacklogItemInactiveCompleted(this, new markBacklogItemInactiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("mergeThemesResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public mergeThemesResponse mergeThemes([System.Xml.Serialization.XmlElementAttribute("mergeThemes", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] mergeThemes mergeThemes1) {
            object[] results = this.Invoke("mergeThemes", new object[] {
                        mergeThemes1});
            return ((mergeThemesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void mergeThemesAsync(mergeThemes mergeThemes1) {
            this.mergeThemesAsync(mergeThemes1, null);
        }
        
        /// <remarks/>
        public void mergeThemesAsync(mergeThemes mergeThemes1, object userState) {
            if ((this.mergeThemesOperationCompleted == null)) {
                this.mergeThemesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeThemesOperationCompleted);
            }
            this.InvokeAsync("mergeThemes", new object[] {
                        mergeThemes1}, this.mergeThemesOperationCompleted, userState);
        }
        
        private void OnmergeThemesOperationCompleted(object arg) {
            if ((this.mergeThemesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mergeThemesCompleted(this, new mergeThemesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("moveBacklogItemAfterResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public moveBacklogItemAfterResponse moveBacklogItemAfter([System.Xml.Serialization.XmlElementAttribute("moveBacklogItemAfter", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveBacklogItemAfter moveBacklogItemAfter1) {
            object[] results = this.Invoke("moveBacklogItemAfter", new object[] {
                        moveBacklogItemAfter1});
            return ((moveBacklogItemAfterResponse)(results[0]));
        }
        
        /// <remarks/>
        public void moveBacklogItemAfterAsync(moveBacklogItemAfter moveBacklogItemAfter1) {
            this.moveBacklogItemAfterAsync(moveBacklogItemAfter1, null);
        }
        
        /// <remarks/>
        public void moveBacklogItemAfterAsync(moveBacklogItemAfter moveBacklogItemAfter1, object userState) {
            if ((this.moveBacklogItemAfterOperationCompleted == null)) {
                this.moveBacklogItemAfterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveBacklogItemAfterOperationCompleted);
            }
            this.InvokeAsync("moveBacklogItemAfter", new object[] {
                        moveBacklogItemAfter1}, this.moveBacklogItemAfterOperationCompleted, userState);
        }
        
        private void OnmoveBacklogItemAfterOperationCompleted(object arg) {
            if ((this.moveBacklogItemAfterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveBacklogItemAfterCompleted(this, new moveBacklogItemAfterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("moveBacklogItemIntoReleaseResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public moveBacklogItemIntoReleaseResponse moveBacklogItemIntoRelease([System.Xml.Serialization.XmlElementAttribute("moveBacklogItemIntoRelease", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveBacklogItemIntoRelease moveBacklogItemIntoRelease1) {
            object[] results = this.Invoke("moveBacklogItemIntoRelease", new object[] {
                        moveBacklogItemIntoRelease1});
            return ((moveBacklogItemIntoReleaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void moveBacklogItemIntoReleaseAsync(moveBacklogItemIntoRelease moveBacklogItemIntoRelease1) {
            this.moveBacklogItemIntoReleaseAsync(moveBacklogItemIntoRelease1, null);
        }
        
        /// <remarks/>
        public void moveBacklogItemIntoReleaseAsync(moveBacklogItemIntoRelease moveBacklogItemIntoRelease1, object userState) {
            if ((this.moveBacklogItemIntoReleaseOperationCompleted == null)) {
                this.moveBacklogItemIntoReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveBacklogItemIntoReleaseOperationCompleted);
            }
            this.InvokeAsync("moveBacklogItemIntoRelease", new object[] {
                        moveBacklogItemIntoRelease1}, this.moveBacklogItemIntoReleaseOperationCompleted, userState);
        }
        
        private void OnmoveBacklogItemIntoReleaseOperationCompleted(object arg) {
            if ((this.moveBacklogItemIntoReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveBacklogItemIntoReleaseCompleted(this, new moveBacklogItemIntoReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("moveBacklogItemIntoSprintResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public moveBacklogItemIntoSprintResponse moveBacklogItemIntoSprint([System.Xml.Serialization.XmlElementAttribute("moveBacklogItemIntoSprint", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveBacklogItemIntoSprint moveBacklogItemIntoSprint1) {
            object[] results = this.Invoke("moveBacklogItemIntoSprint", new object[] {
                        moveBacklogItemIntoSprint1});
            return ((moveBacklogItemIntoSprintResponse)(results[0]));
        }
        
        /// <remarks/>
        public void moveBacklogItemIntoSprintAsync(moveBacklogItemIntoSprint moveBacklogItemIntoSprint1) {
            this.moveBacklogItemIntoSprintAsync(moveBacklogItemIntoSprint1, null);
        }
        
        /// <remarks/>
        public void moveBacklogItemIntoSprintAsync(moveBacklogItemIntoSprint moveBacklogItemIntoSprint1, object userState) {
            if ((this.moveBacklogItemIntoSprintOperationCompleted == null)) {
                this.moveBacklogItemIntoSprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveBacklogItemIntoSprintOperationCompleted);
            }
            this.InvokeAsync("moveBacklogItemIntoSprint", new object[] {
                        moveBacklogItemIntoSprint1}, this.moveBacklogItemIntoSprintOperationCompleted, userState);
        }
        
        private void OnmoveBacklogItemIntoSprintOperationCompleted(object arg) {
            if ((this.moveBacklogItemIntoSprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveBacklogItemIntoSprintCompleted(this, new moveBacklogItemIntoSprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("moveBacklogItemsAfterResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BacklogItemWSO[] moveBacklogItemsAfter([System.Xml.Serialization.XmlElementAttribute("moveBacklogItemsAfter", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveBacklogItemsAfter moveBacklogItemsAfter1) {
            object[] results = this.Invoke("moveBacklogItemsAfter", new object[] {
                        moveBacklogItemsAfter1});
            return ((BacklogItemWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void moveBacklogItemsAfterAsync(moveBacklogItemsAfter moveBacklogItemsAfter1) {
            this.moveBacklogItemsAfterAsync(moveBacklogItemsAfter1, null);
        }
        
        /// <remarks/>
        public void moveBacklogItemsAfterAsync(moveBacklogItemsAfter moveBacklogItemsAfter1, object userState) {
            if ((this.moveBacklogItemsAfterOperationCompleted == null)) {
                this.moveBacklogItemsAfterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveBacklogItemsAfterOperationCompleted);
            }
            this.InvokeAsync("moveBacklogItemsAfter", new object[] {
                        moveBacklogItemsAfter1}, this.moveBacklogItemsAfterOperationCompleted, userState);
        }
        
        private void OnmoveBacklogItemsAfterOperationCompleted(object arg) {
            if ((this.moveBacklogItemsAfterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveBacklogItemsAfterCompleted(this, new moveBacklogItemsAfterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("moveBacklogItemsIntoReleaseResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BacklogItemWSO[] moveBacklogItemsIntoRelease([System.Xml.Serialization.XmlElementAttribute("moveBacklogItemsIntoRelease", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveBacklogItemsIntoRelease moveBacklogItemsIntoRelease1) {
            object[] results = this.Invoke("moveBacklogItemsIntoRelease", new object[] {
                        moveBacklogItemsIntoRelease1});
            return ((BacklogItemWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void moveBacklogItemsIntoReleaseAsync(moveBacklogItemsIntoRelease moveBacklogItemsIntoRelease1) {
            this.moveBacklogItemsIntoReleaseAsync(moveBacklogItemsIntoRelease1, null);
        }
        
        /// <remarks/>
        public void moveBacklogItemsIntoReleaseAsync(moveBacklogItemsIntoRelease moveBacklogItemsIntoRelease1, object userState) {
            if ((this.moveBacklogItemsIntoReleaseOperationCompleted == null)) {
                this.moveBacklogItemsIntoReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveBacklogItemsIntoReleaseOperationCompleted);
            }
            this.InvokeAsync("moveBacklogItemsIntoRelease", new object[] {
                        moveBacklogItemsIntoRelease1}, this.moveBacklogItemsIntoReleaseOperationCompleted, userState);
        }
        
        private void OnmoveBacklogItemsIntoReleaseOperationCompleted(object arg) {
            if ((this.moveBacklogItemsIntoReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveBacklogItemsIntoReleaseCompleted(this, new moveBacklogItemsIntoReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("moveBacklogItemsIntoSprintResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BacklogItemWSO[] moveBacklogItemsIntoSprint([System.Xml.Serialization.XmlElementAttribute("moveBacklogItemsIntoSprint", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveBacklogItemsIntoSprint moveBacklogItemsIntoSprint1) {
            object[] results = this.Invoke("moveBacklogItemsIntoSprint", new object[] {
                        moveBacklogItemsIntoSprint1});
            return ((BacklogItemWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void moveBacklogItemsIntoSprintAsync(moveBacklogItemsIntoSprint moveBacklogItemsIntoSprint1) {
            this.moveBacklogItemsIntoSprintAsync(moveBacklogItemsIntoSprint1, null);
        }
        
        /// <remarks/>
        public void moveBacklogItemsIntoSprintAsync(moveBacklogItemsIntoSprint moveBacklogItemsIntoSprint1, object userState) {
            if ((this.moveBacklogItemsIntoSprintOperationCompleted == null)) {
                this.moveBacklogItemsIntoSprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveBacklogItemsIntoSprintOperationCompleted);
            }
            this.InvokeAsync("moveBacklogItemsIntoSprint", new object[] {
                        moveBacklogItemsIntoSprint1}, this.moveBacklogItemsIntoSprintOperationCompleted, userState);
        }
        
        private void OnmoveBacklogItemsIntoSprintOperationCompleted(object arg) {
            if ((this.moveBacklogItemsIntoSprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveBacklogItemsIntoSprintCompleted(this, new moveBacklogItemsIntoSprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("moveReleaseAfterResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public moveReleaseAfterResponse moveReleaseAfter([System.Xml.Serialization.XmlElementAttribute("moveReleaseAfter", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveReleaseAfter moveReleaseAfter1) {
            object[] results = this.Invoke("moveReleaseAfter", new object[] {
                        moveReleaseAfter1});
            return ((moveReleaseAfterResponse)(results[0]));
        }
        
        /// <remarks/>
        public void moveReleaseAfterAsync(moveReleaseAfter moveReleaseAfter1) {
            this.moveReleaseAfterAsync(moveReleaseAfter1, null);
        }
        
        /// <remarks/>
        public void moveReleaseAfterAsync(moveReleaseAfter moveReleaseAfter1, object userState) {
            if ((this.moveReleaseAfterOperationCompleted == null)) {
                this.moveReleaseAfterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveReleaseAfterOperationCompleted);
            }
            this.InvokeAsync("moveReleaseAfter", new object[] {
                        moveReleaseAfter1}, this.moveReleaseAfterOperationCompleted, userState);
        }
        
        private void OnmoveReleaseAfterOperationCompleted(object arg) {
            if ((this.moveReleaseAfterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveReleaseAfterCompleted(this, new moveReleaseAfterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("moveReleaseBeforeResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public moveReleaseBeforeResponse moveReleaseBefore([System.Xml.Serialization.XmlElementAttribute("moveReleaseBefore", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveReleaseBefore moveReleaseBefore1) {
            object[] results = this.Invoke("moveReleaseBefore", new object[] {
                        moveReleaseBefore1});
            return ((moveReleaseBeforeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void moveReleaseBeforeAsync(moveReleaseBefore moveReleaseBefore1) {
            this.moveReleaseBeforeAsync(moveReleaseBefore1, null);
        }
        
        /// <remarks/>
        public void moveReleaseBeforeAsync(moveReleaseBefore moveReleaseBefore1, object userState) {
            if ((this.moveReleaseBeforeOperationCompleted == null)) {
                this.moveReleaseBeforeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveReleaseBeforeOperationCompleted);
            }
            this.InvokeAsync("moveReleaseBefore", new object[] {
                        moveReleaseBefore1}, this.moveReleaseBeforeOperationCompleted, userState);
        }
        
        private void OnmoveReleaseBeforeOperationCompleted(object arg) {
            if ((this.moveReleaseBeforeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveReleaseBeforeCompleted(this, new moveReleaseBeforeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("moveTaskAfterResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public moveTaskAfterResponse moveTaskAfter([System.Xml.Serialization.XmlElementAttribute("moveTaskAfter", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveTaskAfter moveTaskAfter1) {
            object[] results = this.Invoke("moveTaskAfter", new object[] {
                        moveTaskAfter1});
            return ((moveTaskAfterResponse)(results[0]));
        }
        
        /// <remarks/>
        public void moveTaskAfterAsync(moveTaskAfter moveTaskAfter1) {
            this.moveTaskAfterAsync(moveTaskAfter1, null);
        }
        
        /// <remarks/>
        public void moveTaskAfterAsync(moveTaskAfter moveTaskAfter1, object userState) {
            if ((this.moveTaskAfterOperationCompleted == null)) {
                this.moveTaskAfterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveTaskAfterOperationCompleted);
            }
            this.InvokeAsync("moveTaskAfter", new object[] {
                        moveTaskAfter1}, this.moveTaskAfterOperationCompleted, userState);
        }
        
        private void OnmoveTaskAfterOperationCompleted(object arg) {
            if ((this.moveTaskAfterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveTaskAfterCompleted(this, new moveTaskAfterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("moveTaskIntoBacklogItemResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public moveTaskIntoBacklogItemResponse moveTaskIntoBacklogItem([System.Xml.Serialization.XmlElementAttribute("moveTaskIntoBacklogItem", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveTaskIntoBacklogItem moveTaskIntoBacklogItem1) {
            object[] results = this.Invoke("moveTaskIntoBacklogItem", new object[] {
                        moveTaskIntoBacklogItem1});
            return ((moveTaskIntoBacklogItemResponse)(results[0]));
        }
        
        /// <remarks/>
        public void moveTaskIntoBacklogItemAsync(moveTaskIntoBacklogItem moveTaskIntoBacklogItem1) {
            this.moveTaskIntoBacklogItemAsync(moveTaskIntoBacklogItem1, null);
        }
        
        /// <remarks/>
        public void moveTaskIntoBacklogItemAsync(moveTaskIntoBacklogItem moveTaskIntoBacklogItem1, object userState) {
            if ((this.moveTaskIntoBacklogItemOperationCompleted == null)) {
                this.moveTaskIntoBacklogItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveTaskIntoBacklogItemOperationCompleted);
            }
            this.InvokeAsync("moveTaskIntoBacklogItem", new object[] {
                        moveTaskIntoBacklogItem1}, this.moveTaskIntoBacklogItemOperationCompleted, userState);
        }
        
        private void OnmoveTaskIntoBacklogItemOperationCompleted(object arg) {
            if ((this.moveTaskIntoBacklogItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveTaskIntoBacklogItemCompleted(this, new moveTaskIntoBacklogItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("moveTasksAfterResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskWSO[] moveTasksAfter([System.Xml.Serialization.XmlElementAttribute("moveTasksAfter", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveTasksAfter moveTasksAfter1) {
            object[] results = this.Invoke("moveTasksAfter", new object[] {
                        moveTasksAfter1});
            return ((TaskWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void moveTasksAfterAsync(moveTasksAfter moveTasksAfter1) {
            this.moveTasksAfterAsync(moveTasksAfter1, null);
        }
        
        /// <remarks/>
        public void moveTasksAfterAsync(moveTasksAfter moveTasksAfter1, object userState) {
            if ((this.moveTasksAfterOperationCompleted == null)) {
                this.moveTasksAfterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveTasksAfterOperationCompleted);
            }
            this.InvokeAsync("moveTasksAfter", new object[] {
                        moveTasksAfter1}, this.moveTasksAfterOperationCompleted, userState);
        }
        
        private void OnmoveTasksAfterOperationCompleted(object arg) {
            if ((this.moveTasksAfterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveTasksAfterCompleted(this, new moveTasksAfterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("moveTasksIntoBacklogItemResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskWSO[] moveTasksIntoBacklogItem([System.Xml.Serialization.XmlElementAttribute("moveTasksIntoBacklogItem", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] moveTasksIntoBacklogItem moveTasksIntoBacklogItem1) {
            object[] results = this.Invoke("moveTasksIntoBacklogItem", new object[] {
                        moveTasksIntoBacklogItem1});
            return ((TaskWSO[])(results[0]));
        }
        
        /// <remarks/>
        public void moveTasksIntoBacklogItemAsync(moveTasksIntoBacklogItem moveTasksIntoBacklogItem1) {
            this.moveTasksIntoBacklogItemAsync(moveTasksIntoBacklogItem1, null);
        }
        
        /// <remarks/>
        public void moveTasksIntoBacklogItemAsync(moveTasksIntoBacklogItem moveTasksIntoBacklogItem1, object userState) {
            if ((this.moveTasksIntoBacklogItemOperationCompleted == null)) {
                this.moveTasksIntoBacklogItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveTasksIntoBacklogItemOperationCompleted);
            }
            this.InvokeAsync("moveTasksIntoBacklogItem", new object[] {
                        moveTasksIntoBacklogItem1}, this.moveTasksIntoBacklogItemOperationCompleted, userState);
        }
        
        private void OnmoveTasksIntoBacklogItemOperationCompleted(object arg) {
            if ((this.moveTasksIntoBacklogItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveTasksIntoBacklogItemCompleted(this, new moveTasksIntoBacklogItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("removeBacklogItemsFromThemeResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public removeBacklogItemsFromThemeResponse removeBacklogItemsFromTheme([System.Xml.Serialization.XmlElementAttribute("removeBacklogItemsFromTheme", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] removeBacklogItemsFromTheme removeBacklogItemsFromTheme1) {
            object[] results = this.Invoke("removeBacklogItemsFromTheme", new object[] {
                        removeBacklogItemsFromTheme1});
            return ((removeBacklogItemsFromThemeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void removeBacklogItemsFromThemeAsync(removeBacklogItemsFromTheme removeBacklogItemsFromTheme1) {
            this.removeBacklogItemsFromThemeAsync(removeBacklogItemsFromTheme1, null);
        }
        
        /// <remarks/>
        public void removeBacklogItemsFromThemeAsync(removeBacklogItemsFromTheme removeBacklogItemsFromTheme1, object userState) {
            if ((this.removeBacklogItemsFromThemeOperationCompleted == null)) {
                this.removeBacklogItemsFromThemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveBacklogItemsFromThemeOperationCompleted);
            }
            this.InvokeAsync("removeBacklogItemsFromTheme", new object[] {
                        removeBacklogItemsFromTheme1}, this.removeBacklogItemsFromThemeOperationCompleted, userState);
        }
        
        private void OnremoveBacklogItemsFromThemeOperationCompleted(object arg) {
            if ((this.removeBacklogItemsFromThemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeBacklogItemsFromThemeCompleted(this, new removeBacklogItemsFromThemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("renameThemeResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public renameThemeResponse renameTheme([System.Xml.Serialization.XmlElementAttribute("renameTheme", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] renameTheme renameTheme1) {
            object[] results = this.Invoke("renameTheme", new object[] {
                        renameTheme1});
            return ((renameThemeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void renameThemeAsync(renameTheme renameTheme1) {
            this.renameThemeAsync(renameTheme1, null);
        }
        
        /// <remarks/>
        public void renameThemeAsync(renameTheme renameTheme1, object userState) {
            if ((this.renameThemeOperationCompleted == null)) {
                this.renameThemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameThemeOperationCompleted);
            }
            this.InvokeAsync("renameTheme", new object[] {
                        renameTheme1}, this.renameThemeOperationCompleted, userState);
        }
        
        private void OnrenameThemeOperationCompleted(object arg) {
            if ((this.renameThemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameThemeCompleted(this, new renameThemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateBacklogItemResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public updateBacklogItemResponse updateBacklogItem([System.Xml.Serialization.XmlElementAttribute("updateBacklogItem", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] updateBacklogItem updateBacklogItem1) {
            object[] results = this.Invoke("updateBacklogItem", new object[] {
                        updateBacklogItem1});
            return ((updateBacklogItemResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateBacklogItemAsync(updateBacklogItem updateBacklogItem1) {
            this.updateBacklogItemAsync(updateBacklogItem1, null);
        }
        
        /// <remarks/>
        public void updateBacklogItemAsync(updateBacklogItem updateBacklogItem1, object userState) {
            if ((this.updateBacklogItemOperationCompleted == null)) {
                this.updateBacklogItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateBacklogItemOperationCompleted);
            }
            this.InvokeAsync("updateBacklogItem", new object[] {
                        updateBacklogItem1}, this.updateBacklogItemOperationCompleted, userState);
        }
        
        private void OnupdateBacklogItemOperationCompleted(object arg) {
            if ((this.updateBacklogItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateBacklogItemCompleted(this, new updateBacklogItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateImpedimentResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public updateImpedimentResponse updateImpediment([System.Xml.Serialization.XmlElementAttribute("updateImpediment", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] updateImpediment updateImpediment1) {
            object[] results = this.Invoke("updateImpediment", new object[] {
                        updateImpediment1});
            return ((updateImpedimentResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateImpedimentAsync(updateImpediment updateImpediment1) {
            this.updateImpedimentAsync(updateImpediment1, null);
        }
        
        /// <remarks/>
        public void updateImpedimentAsync(updateImpediment updateImpediment1, object userState) {
            if ((this.updateImpedimentOperationCompleted == null)) {
                this.updateImpedimentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateImpedimentOperationCompleted);
            }
            this.InvokeAsync("updateImpediment", new object[] {
                        updateImpediment1}, this.updateImpedimentOperationCompleted, userState);
        }
        
        private void OnupdateImpedimentOperationCompleted(object arg) {
            if ((this.updateImpedimentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateImpedimentCompleted(this, new updateImpedimentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateReleaseResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public updateReleaseResponse updateRelease([System.Xml.Serialization.XmlElementAttribute("updateRelease", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] updateRelease updateRelease1) {
            object[] results = this.Invoke("updateRelease", new object[] {
                        updateRelease1});
            return ((updateReleaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateReleaseAsync(updateRelease updateRelease1) {
            this.updateReleaseAsync(updateRelease1, null);
        }
        
        /// <remarks/>
        public void updateReleaseAsync(updateRelease updateRelease1, object userState) {
            if ((this.updateReleaseOperationCompleted == null)) {
                this.updateReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateReleaseOperationCompleted);
            }
            this.InvokeAsync("updateRelease", new object[] {
                        updateRelease1}, this.updateReleaseOperationCompleted, userState);
        }
        
        private void OnupdateReleaseOperationCompleted(object arg) {
            if ((this.updateReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateReleaseCompleted(this, new updateReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateSprintResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public updateSprintResponse updateSprint([System.Xml.Serialization.XmlElementAttribute("updateSprint", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] updateSprint updateSprint1) {
            object[] results = this.Invoke("updateSprint", new object[] {
                        updateSprint1});
            return ((updateSprintResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateSprintAsync(updateSprint updateSprint1) {
            this.updateSprintAsync(updateSprint1, null);
        }
        
        /// <remarks/>
        public void updateSprintAsync(updateSprint updateSprint1, object userState) {
            if ((this.updateSprintOperationCompleted == null)) {
                this.updateSprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSprintOperationCompleted);
            }
            this.InvokeAsync("updateSprint", new object[] {
                        updateSprint1}, this.updateSprintOperationCompleted, userState);
        }
        
        private void OnupdateSprintOperationCompleted(object arg) {
            if ((this.updateSprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSprintCompleted(this, new updateSprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateTaskResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public updateTaskResponse updateTask([System.Xml.Serialization.XmlElementAttribute("updateTask", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] updateTask updateTask1) {
            object[] results = this.Invoke("updateTask", new object[] {
                        updateTask1});
            return ((updateTaskResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateTaskAsync(updateTask updateTask1) {
            this.updateTaskAsync(updateTask1, null);
        }
        
        /// <remarks/>
        public void updateTaskAsync(updateTask updateTask1, object userState) {
            if ((this.updateTaskOperationCompleted == null)) {
                this.updateTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTaskOperationCompleted);
            }
            this.InvokeAsync("updateTask", new object[] {
                        updateTask1}, this.updateTaskOperationCompleted, userState);
        }
        
        private void OnupdateTaskOperationCompleted(object arg) {
            if ((this.updateTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTaskCompleted(this, new updateTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateTaskEstimateResponse", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
        public updateTaskEstimateResponse updateTaskEstimate([System.Xml.Serialization.XmlElementAttribute("updateTaskEstimate", Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")] updateTaskEstimate updateTaskEstimate1) {
            object[] results = this.Invoke("updateTaskEstimate", new object[] {
                        updateTaskEstimate1});
            return ((updateTaskEstimateResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateTaskEstimateAsync(updateTaskEstimate updateTaskEstimate1) {
            this.updateTaskEstimateAsync(updateTaskEstimate1, null);
        }
        
        /// <remarks/>
        public void updateTaskEstimateAsync(updateTaskEstimate updateTaskEstimate1, object userState) {
            if ((this.updateTaskEstimateOperationCompleted == null)) {
                this.updateTaskEstimateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTaskEstimateOperationCompleted);
            }
            this.InvokeAsync("updateTaskEstimate", new object[] {
                        updateTaskEstimate1}, this.updateTaskEstimateOperationCompleted, userState);
        }
        
        private void OnupdateTaskEstimateOperationCompleted(object arg) {
            if ((this.updateTaskEstimateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTaskEstimateCompleted(this, new updateTaskEstimateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class addBacklogItemsToTheme {
        
        private BacklogItemWSO[] arrayOfBacklogItemWSO_1Field;
        
        private ThemeWSO themeWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arrayOfBacklogItemWSO_1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO[] arrayOfBacklogItemWSO_1 {
            get {
                return this.arrayOfBacklogItemWSO_1Field;
            }
            set {
                this.arrayOfBacklogItemWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO ThemeWSO_2 {
            get {
                return this.themeWSO_2Field;
            }
            set {
                this.themeWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class BacklogItemWSO {
        
        private bool activeField;
        
        private System.Nullable<long> backlogItemIdField;
        
        private System.Nullable<System.DateTime> completedDateField;
        
        private string descriptionField;
        
        private System.Nullable<int> estimateField;
        
        private double rankField;
        
        private System.Nullable<long> releaseIdField;
        
        private System.Nullable<long> sprintIdField;
        
        private ThemeWSO[] themesField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> backlogItemId {
            get {
                return this.backlogItemIdField;
            }
            set {
                this.backlogItemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> completedDate {
            get {
                return this.completedDateField;
            }
            set {
                this.completedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> estimate {
            get {
                return this.estimateField;
            }
            set {
                this.estimateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> releaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> sprintId {
            get {
                return this.sprintIdField;
            }
            set {
                this.sprintIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("themes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO[] themes {
            get {
                return this.themesField;
            }
            set {
                this.themesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class ThemeWSO {
        
        private string nameField;
        
        private System.Nullable<long> themeIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> themeId {
            get {
                return this.themeIdField;
            }
            set {
                this.themeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateTaskEstimateResponse {
        
        private TaskWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class TaskWSO {
        
        private System.Nullable<long> backlogItemIdField;
        
        private string descriptionField;
        
        private int estimatedHoursField;
        
        private System.Nullable<long> idField;
        
        private string pointPersonField;
        
        private double rankField;
        
        private TaskStatusWSO statusField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> backlogItemId {
            get {
                return this.backlogItemIdField;
            }
            set {
                this.backlogItemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int estimatedHours {
            get {
                return this.estimatedHoursField;
            }
            set {
                this.estimatedHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string pointPerson {
            get {
                return this.pointPersonField;
            }
            set {
                this.pointPersonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskStatusWSO status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class TaskStatusWSO {
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateTaskEstimate {
        
        private TaskWSO taskWSO_1Field;
        
        private System.Nullable<System.DateTime> date_2Field;
        
        private int int_3Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_1 {
            get {
                return this.taskWSO_1Field;
            }
            set {
                this.taskWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> Date_2 {
            get {
                return this.date_2Field;
            }
            set {
                this.date_2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int int_3 {
            get {
                return this.int_3Field;
            }
            set {
                this.int_3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateTaskResponse {
        
        private TaskWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateTask {
        
        private TaskWSO taskWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_1 {
            get {
                return this.taskWSO_1Field;
            }
            set {
                this.taskWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateSprintResponse {
        
        private SprintWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SprintWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class SprintWSO {
        
        private System.Nullable<System.DateTime> endDateField;
        
        private string goalsField;
        
        private System.Nullable<long> idField;
        
        private string nameField;
        
        private System.Nullable<long> productIdField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string goals {
            get {
                return this.goalsField;
            }
            set {
                this.goalsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> productId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateSprint {
        
        private SprintWSO sprintWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SprintWSO SprintWSO_1 {
            get {
                return this.sprintWSO_1Field;
            }
            set {
                this.sprintWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateReleaseResponse {
        
        private ReleaseWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class ReleaseWSO {
        
        private System.Nullable<long> idField;
        
        private double rankField;
        
        private System.Nullable<System.DateTime> releaseDateField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> releaseDate {
            get {
                return this.releaseDateField;
            }
            set {
                this.releaseDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateRelease {
        
        private ReleaseWSO releaseWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_1 {
            get {
                return this.releaseWSO_1Field;
            }
            set {
                this.releaseWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateImpedimentResponse {
        
        private ImpedimentWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ImpedimentWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class ImpedimentWSO {
        
        private string detailField;
        
        private System.Nullable<System.DateTime> entryDateField;
        
        private System.Nullable<long> idField;
        
        private System.Nullable<System.DateTime> lastModDateField;
        
        private System.Nullable<System.DateTime> resolutionDateField;
        
        private string summaryField;
        
        private System.Nullable<long> teamIdField;
        
        private string teamMemberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string detail {
            get {
                return this.detailField;
            }
            set {
                this.detailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> entryDate {
            get {
                return this.entryDateField;
            }
            set {
                this.entryDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> lastModDate {
            get {
                return this.lastModDateField;
            }
            set {
                this.lastModDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> resolutionDate {
            get {
                return this.resolutionDateField;
            }
            set {
                this.resolutionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> teamId {
            get {
                return this.teamIdField;
            }
            set {
                this.teamIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string teamMember {
            get {
                return this.teamMemberField;
            }
            set {
                this.teamMemberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateImpediment {
        
        private ImpedimentWSO impedimentWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ImpedimentWSO ImpedimentWSO_1 {
            get {
                return this.impedimentWSO_1Field;
            }
            set {
                this.impedimentWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateBacklogItemResponse {
        
        private BacklogItemWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class updateBacklogItem {
        
        private BacklogItemWSO backlogItemWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_1 {
            get {
                return this.backlogItemWSO_1Field;
            }
            set {
                this.backlogItemWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class renameThemeResponse {
        
        private ThemeWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class renameTheme {
        
        private ThemeWSO themeWSO_1Field;
        
        private string string_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO ThemeWSO_1 {
            get {
                return this.themeWSO_1Field;
            }
            set {
                this.themeWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string String_2 {
            get {
                return this.string_2Field;
            }
            set {
                this.string_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class removeBacklogItemsFromThemeResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class removeBacklogItemsFromTheme {
        
        private BacklogItemWSO[] arrayOfBacklogItemWSO_1Field;
        
        private ThemeWSO themeWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arrayOfBacklogItemWSO_1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO[] arrayOfBacklogItemWSO_1 {
            get {
                return this.arrayOfBacklogItemWSO_1Field;
            }
            set {
                this.arrayOfBacklogItemWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO ThemeWSO_2 {
            get {
                return this.themeWSO_2Field;
            }
            set {
                this.themeWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveTasksIntoBacklogItem {
        
        private TaskWSO[] arrayOfTaskWSO_1Field;
        
        private BacklogItemWSO backlogItemWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arrayOfTaskWSO_1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO[] arrayOfTaskWSO_1 {
            get {
                return this.arrayOfTaskWSO_1Field;
            }
            set {
                this.arrayOfTaskWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_2 {
            get {
                return this.backlogItemWSO_2Field;
            }
            set {
                this.backlogItemWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveTasksAfter {
        
        private TaskWSO[] arrayOfTaskWSO_1Field;
        
        private TaskWSO taskWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arrayOfTaskWSO_1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO[] arrayOfTaskWSO_1 {
            get {
                return this.arrayOfTaskWSO_1Field;
            }
            set {
                this.arrayOfTaskWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_2 {
            get {
                return this.taskWSO_2Field;
            }
            set {
                this.taskWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveTaskIntoBacklogItemResponse {
        
        private TaskWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveTaskIntoBacklogItem {
        
        private TaskWSO taskWSO_1Field;
        
        private BacklogItemWSO backlogItemWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_1 {
            get {
                return this.taskWSO_1Field;
            }
            set {
                this.taskWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_2 {
            get {
                return this.backlogItemWSO_2Field;
            }
            set {
                this.backlogItemWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveTaskAfterResponse {
        
        private TaskWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveTaskAfter {
        
        private TaskWSO taskWSO_1Field;
        
        private TaskWSO taskWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_1 {
            get {
                return this.taskWSO_1Field;
            }
            set {
                this.taskWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_2 {
            get {
                return this.taskWSO_2Field;
            }
            set {
                this.taskWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveReleaseBeforeResponse {
        
        private ReleaseWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveReleaseBefore {
        
        private ReleaseWSO releaseWSO_1Field;
        
        private ReleaseWSO releaseWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_1 {
            get {
                return this.releaseWSO_1Field;
            }
            set {
                this.releaseWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_2 {
            get {
                return this.releaseWSO_2Field;
            }
            set {
                this.releaseWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveReleaseAfterResponse {
        
        private ReleaseWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveReleaseAfter {
        
        private ReleaseWSO releaseWSO_1Field;
        
        private ReleaseWSO releaseWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_1 {
            get {
                return this.releaseWSO_1Field;
            }
            set {
                this.releaseWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_2 {
            get {
                return this.releaseWSO_2Field;
            }
            set {
                this.releaseWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveBacklogItemsIntoSprint {
        
        private BacklogItemWSO[] arrayOfBacklogItemWSO_1Field;
        
        private SprintWSO sprintWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arrayOfBacklogItemWSO_1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO[] arrayOfBacklogItemWSO_1 {
            get {
                return this.arrayOfBacklogItemWSO_1Field;
            }
            set {
                this.arrayOfBacklogItemWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SprintWSO SprintWSO_2 {
            get {
                return this.sprintWSO_2Field;
            }
            set {
                this.sprintWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveBacklogItemsIntoRelease {
        
        private BacklogItemWSO[] arrayOfBacklogItemWSO_1Field;
        
        private ReleaseWSO releaseWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arrayOfBacklogItemWSO_1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO[] arrayOfBacklogItemWSO_1 {
            get {
                return this.arrayOfBacklogItemWSO_1Field;
            }
            set {
                this.arrayOfBacklogItemWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_2 {
            get {
                return this.releaseWSO_2Field;
            }
            set {
                this.releaseWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveBacklogItemsAfter {
        
        private BacklogItemWSO[] arrayOfBacklogItemWSO_1Field;
        
        private BacklogItemWSO backlogItemWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arrayOfBacklogItemWSO_1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO[] arrayOfBacklogItemWSO_1 {
            get {
                return this.arrayOfBacklogItemWSO_1Field;
            }
            set {
                this.arrayOfBacklogItemWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_2 {
            get {
                return this.backlogItemWSO_2Field;
            }
            set {
                this.backlogItemWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveBacklogItemIntoSprintResponse {
        
        private BacklogItemWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveBacklogItemIntoSprint {
        
        private BacklogItemWSO backlogItemWSO_1Field;
        
        private SprintWSO sprintWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_1 {
            get {
                return this.backlogItemWSO_1Field;
            }
            set {
                this.backlogItemWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SprintWSO SprintWSO_2 {
            get {
                return this.sprintWSO_2Field;
            }
            set {
                this.sprintWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveBacklogItemIntoReleaseResponse {
        
        private BacklogItemWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveBacklogItemIntoRelease {
        
        private BacklogItemWSO backlogItemWSO_1Field;
        
        private ReleaseWSO releaseWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_1 {
            get {
                return this.backlogItemWSO_1Field;
            }
            set {
                this.backlogItemWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_2 {
            get {
                return this.releaseWSO_2Field;
            }
            set {
                this.releaseWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveBacklogItemAfterResponse {
        
        private BacklogItemWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class moveBacklogItemAfter {
        
        private BacklogItemWSO backlogItemWSO_1Field;
        
        private BacklogItemWSO backlogItemWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_1 {
            get {
                return this.backlogItemWSO_1Field;
            }
            set {
                this.backlogItemWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_2 {
            get {
                return this.backlogItemWSO_2Field;
            }
            set {
                this.backlogItemWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class mergeThemesResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class mergeThemes {
        
        private ThemeWSO themeWSO_1Field;
        
        private ThemeWSO themeWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO ThemeWSO_1 {
            get {
                return this.themeWSO_1Field;
            }
            set {
                this.themeWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO ThemeWSO_2 {
            get {
                return this.themeWSO_2Field;
            }
            set {
                this.themeWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class markBacklogItemInactiveResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class markBacklogItemInactive {
        
        private BacklogItemWSO backlogItemWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_1 {
            get {
                return this.backlogItemWSO_1Field;
            }
            set {
                this.backlogItemWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getUsers {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getThemes {
        
        private ProductWSO productWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ProductWSO ProductWSO_1 {
            get {
                return this.productWSO_1Field;
            }
            set {
                this.productWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class ProductWSO {
        
        private string effortUnitsField;
        
        private System.Nullable<long> idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string effortUnits {
            get {
                return this.effortUnitsField;
            }
            set {
                this.effortUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getTestResponse {
        
        private string resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getTest {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getTeams {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class UserWSO {
        
        private bool activeField;
        
        private string firstNameField;
        
        private System.Nullable<long> idField;
        
        private string lastNameField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getTeamMembers {
        
        private TeamWSO teamWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TeamWSO TeamWSO_1 {
            get {
                return this.teamWSO_1Field;
            }
            set {
                this.teamWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class TeamWSO {
        
        private System.Nullable<long> idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getTasks {
        
        private BacklogItemWSO backlogItemWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_1 {
            get {
                return this.backlogItemWSO_1Field;
            }
            set {
                this.backlogItemWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class TaskEstimateWSO {
        
        private int estimateField;
        
        private System.Nullable<System.DateTime> estimateDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int estimate {
            get {
                return this.estimateField;
            }
            set {
                this.estimateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> estimateDate {
            get {
                return this.estimateDateField;
            }
            set {
                this.estimateDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getTaskEstimates {
        
        private TaskWSO taskWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_1 {
            get {
                return this.taskWSO_1Field;
            }
            set {
                this.taskWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getSprints {
        
        private ProductWSO productWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ProductWSO ProductWSO_1 {
            get {
                return this.productWSO_1Field;
            }
            set {
                this.productWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getReleases {
        
        private ProductWSO productWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ProductWSO ProductWSO_1 {
            get {
                return this.productWSO_1Field;
            }
            set {
                this.productWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getProducts {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getInactiveBacklogItems {
        
        private ProductWSO productWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ProductWSO ProductWSO_1 {
            get {
                return this.productWSO_1Field;
            }
            set {
                this.productWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getImpediments {
        
        private ProductWSO productWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ProductWSO ProductWSO_1 {
            get {
                return this.productWSO_1Field;
            }
            set {
                this.productWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getBacklogItemsForTheme {
        
        private ThemeWSO themeWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO ThemeWSO_1 {
            get {
                return this.themeWSO_1Field;
            }
            set {
                this.themeWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class BacklogItemEstimateWSO {
        
        private System.Nullable<int> estimateField;
        
        private System.Nullable<System.DateTime> estimateDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int> estimate {
            get {
                return this.estimateField;
            }
            set {
                this.estimateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> estimateDate {
            get {
                return this.estimateDateField;
            }
            set {
                this.estimateDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getBacklogItemEstimates {
        
        private BacklogItemWSO backlogItemWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_1 {
            get {
                return this.backlogItemWSO_1Field;
            }
            set {
                this.backlogItemWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getAuthenticatedTestResponse {
        
        private string resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getAuthenticatedTest {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getActiveBacklogItemsForSprint {
        
        private SprintWSO sprintWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SprintWSO SprintWSO_1 {
            get {
                return this.sprintWSO_1Field;
            }
            set {
                this.sprintWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getActiveBacklogItemsForRelease {
        
        private ReleaseWSO releaseWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_1 {
            get {
                return this.releaseWSO_1Field;
            }
            set {
                this.releaseWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class getActiveBacklogItems {
        
        private ProductWSO productWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ProductWSO ProductWSO_1 {
            get {
                return this.productWSO_1Field;
            }
            set {
                this.productWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteThemeResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteTheme {
        
        private ThemeWSO themeWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO ThemeWSO_1 {
            get {
                return this.themeWSO_1Field;
            }
            set {
                this.themeWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteTaskEstimateResponse {
        
        private TaskWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteTaskEstimate {
        
        private TaskWSO taskWSO_1Field;
        
        private System.Nullable<System.DateTime> date_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_1 {
            get {
                return this.taskWSO_1Field;
            }
            set {
                this.taskWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<System.DateTime> Date_2 {
            get {
                return this.date_2Field;
            }
            set {
                this.date_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteTaskResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteTask {
        
        private TaskWSO taskWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_1 {
            get {
                return this.taskWSO_1Field;
            }
            set {
                this.taskWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteEmptySprintResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteEmptySprint {
        
        private SprintWSO sprintWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SprintWSO SprintWSO_1 {
            get {
                return this.sprintWSO_1Field;
            }
            set {
                this.sprintWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteEmptyReleaseResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteEmptyRelease {
        
        private ReleaseWSO releaseWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_1 {
            get {
                return this.releaseWSO_1Field;
            }
            set {
                this.releaseWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteBacklogItemResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class deleteBacklogItem {
        
        private BacklogItemWSO backlogItemWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_1 {
            get {
                return this.backlogItemWSO_1Field;
            }
            set {
                this.backlogItemWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createThemeResponse {
        
        private ThemeWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createTheme {
        
        private ThemeWSO themeWSO_1Field;
        
        private ProductWSO productWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ThemeWSO ThemeWSO_1 {
            get {
                return this.themeWSO_1Field;
            }
            set {
                this.themeWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ProductWSO ProductWSO_2 {
            get {
                return this.productWSO_2Field;
            }
            set {
                this.productWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createTaskResponse {
        
        private TaskWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createTask {
        
        private TaskWSO taskWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskWSO TaskWSO_1 {
            get {
                return this.taskWSO_1Field;
            }
            set {
                this.taskWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createSprintResponse {
        
        private SprintWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SprintWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createSprint {
        
        private SprintWSO sprintWSO_1Field;
        
        private TeamWSO teamWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public SprintWSO SprintWSO_1 {
            get {
                return this.sprintWSO_1Field;
            }
            set {
                this.sprintWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TeamWSO TeamWSO_2 {
            get {
                return this.teamWSO_2Field;
            }
            set {
                this.teamWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createReleaseResponse {
        
        private ReleaseWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createRelease {
        
        private ReleaseWSO releaseWSO_1Field;
        
        private ProductWSO productWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ReleaseWSO ReleaseWSO_1 {
            get {
                return this.releaseWSO_1Field;
            }
            set {
                this.releaseWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ProductWSO ProductWSO_2 {
            get {
                return this.productWSO_2Field;
            }
            set {
                this.productWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createImpedimentResponse {
        
        private ImpedimentWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ImpedimentWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createImpediment {
        
        private ImpedimentWSO impedimentWSO_1Field;
        
        private ProductWSO productWSO_2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ImpedimentWSO ImpedimentWSO_1 {
            get {
                return this.impedimentWSO_1Field;
            }
            set {
                this.impedimentWSO_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public ProductWSO ProductWSO_2 {
            get {
                return this.productWSO_2Field;
            }
            set {
                this.productWSO_2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createBacklogItemResponse {
        
        private BacklogItemWSO resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class createBacklogItem {
        
        private BacklogItemWSO backlogItemWSO_1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public BacklogItemWSO BacklogItemWSO_1 {
            get {
                return this.backlogItemWSO_1Field;
            }
            set {
                this.backlogItemWSO_1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.scrumworks.danube.com/ScrumWorks/types")]
    public partial class addBacklogItemsToThemeResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addBacklogItemsToThemeCompletedEventHandler(object sender, addBacklogItemsToThemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addBacklogItemsToThemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addBacklogItemsToThemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public addBacklogItemsToThemeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((addBacklogItemsToThemeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createBacklogItemCompletedEventHandler(object sender, createBacklogItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createBacklogItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createBacklogItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public createBacklogItemResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((createBacklogItemResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createImpedimentCompletedEventHandler(object sender, createImpedimentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createImpedimentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createImpedimentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public createImpedimentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((createImpedimentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createReleaseCompletedEventHandler(object sender, createReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public createReleaseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((createReleaseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createSprintCompletedEventHandler(object sender, createSprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public createSprintResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((createSprintResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createTaskCompletedEventHandler(object sender, createTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public createTaskResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((createTaskResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createThemeCompletedEventHandler(object sender, createThemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createThemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createThemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public createThemeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((createThemeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteBacklogItemCompletedEventHandler(object sender, deleteBacklogItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteBacklogItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteBacklogItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public deleteBacklogItemResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((deleteBacklogItemResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteEmptyReleaseCompletedEventHandler(object sender, deleteEmptyReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEmptyReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteEmptyReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public deleteEmptyReleaseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((deleteEmptyReleaseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteEmptySprintCompletedEventHandler(object sender, deleteEmptySprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEmptySprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteEmptySprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public deleteEmptySprintResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((deleteEmptySprintResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteTaskCompletedEventHandler(object sender, deleteTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public deleteTaskResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((deleteTaskResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteTaskEstimateCompletedEventHandler(object sender, deleteTaskEstimateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTaskEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTaskEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public deleteTaskEstimateResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((deleteTaskEstimateResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteThemeCompletedEventHandler(object sender, deleteThemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteThemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteThemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public deleteThemeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((deleteThemeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getActiveBacklogItemsCompletedEventHandler(object sender, getActiveBacklogItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveBacklogItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveBacklogItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BacklogItemWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BacklogItemWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getActiveBacklogItemsForReleaseCompletedEventHandler(object sender, getActiveBacklogItemsForReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveBacklogItemsForReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveBacklogItemsForReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BacklogItemWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BacklogItemWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getActiveBacklogItemsForSprintCompletedEventHandler(object sender, getActiveBacklogItemsForSprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveBacklogItemsForSprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveBacklogItemsForSprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BacklogItemWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BacklogItemWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAuthenticatedTestCompletedEventHandler(object sender, getAuthenticatedTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAuthenticatedTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAuthenticatedTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getAuthenticatedTestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getAuthenticatedTestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBacklogItemEstimatesCompletedEventHandler(object sender, getBacklogItemEstimatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBacklogItemEstimatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBacklogItemEstimatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BacklogItemEstimateWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BacklogItemEstimateWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBacklogItemsForThemeCompletedEventHandler(object sender, getBacklogItemsForThemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBacklogItemsForThemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBacklogItemsForThemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BacklogItemWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BacklogItemWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getImpedimentsCompletedEventHandler(object sender, getImpedimentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImpedimentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImpedimentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpedimentWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpedimentWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getInactiveBacklogItemsCompletedEventHandler(object sender, getInactiveBacklogItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInactiveBacklogItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInactiveBacklogItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BacklogItemWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BacklogItemWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProductsCompletedEventHandler(object sender, getProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getReleasesCompletedEventHandler(object sender, getReleasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReleasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReleasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReleaseWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReleaseWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSprintsCompletedEventHandler(object sender, getSprintsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSprintsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSprintsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SprintWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SprintWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTaskEstimatesCompletedEventHandler(object sender, getTaskEstimatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskEstimatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskEstimatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskEstimateWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskEstimateWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTasksCompletedEventHandler(object sender, getTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTeamMembersCompletedEventHandler(object sender, getTeamMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTeamsCompletedEventHandler(object sender, getTeamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TeamWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TeamWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTestCompletedEventHandler(object sender, getTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getTestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getTestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getThemesCompletedEventHandler(object sender, getThemesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getThemesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getThemesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ThemeWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ThemeWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUsersCompletedEventHandler(object sender, getUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void markBacklogItemInactiveCompletedEventHandler(object sender, markBacklogItemInactiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class markBacklogItemInactiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal markBacklogItemInactiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public markBacklogItemInactiveResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((markBacklogItemInactiveResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void mergeThemesCompletedEventHandler(object sender, mergeThemesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mergeThemesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mergeThemesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mergeThemesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mergeThemesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveBacklogItemAfterCompletedEventHandler(object sender, moveBacklogItemAfterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveBacklogItemAfterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveBacklogItemAfterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public moveBacklogItemAfterResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((moveBacklogItemAfterResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveBacklogItemIntoReleaseCompletedEventHandler(object sender, moveBacklogItemIntoReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveBacklogItemIntoReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveBacklogItemIntoReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public moveBacklogItemIntoReleaseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((moveBacklogItemIntoReleaseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveBacklogItemIntoSprintCompletedEventHandler(object sender, moveBacklogItemIntoSprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveBacklogItemIntoSprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveBacklogItemIntoSprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public moveBacklogItemIntoSprintResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((moveBacklogItemIntoSprintResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveBacklogItemsAfterCompletedEventHandler(object sender, moveBacklogItemsAfterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveBacklogItemsAfterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveBacklogItemsAfterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BacklogItemWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BacklogItemWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveBacklogItemsIntoReleaseCompletedEventHandler(object sender, moveBacklogItemsIntoReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveBacklogItemsIntoReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveBacklogItemsIntoReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BacklogItemWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BacklogItemWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveBacklogItemsIntoSprintCompletedEventHandler(object sender, moveBacklogItemsIntoSprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveBacklogItemsIntoSprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveBacklogItemsIntoSprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BacklogItemWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BacklogItemWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveReleaseAfterCompletedEventHandler(object sender, moveReleaseAfterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveReleaseAfterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveReleaseAfterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public moveReleaseAfterResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((moveReleaseAfterResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveReleaseBeforeCompletedEventHandler(object sender, moveReleaseBeforeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveReleaseBeforeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveReleaseBeforeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public moveReleaseBeforeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((moveReleaseBeforeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveTaskAfterCompletedEventHandler(object sender, moveTaskAfterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveTaskAfterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveTaskAfterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public moveTaskAfterResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((moveTaskAfterResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveTaskIntoBacklogItemCompletedEventHandler(object sender, moveTaskIntoBacklogItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveTaskIntoBacklogItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveTaskIntoBacklogItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public moveTaskIntoBacklogItemResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((moveTaskIntoBacklogItemResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveTasksAfterCompletedEventHandler(object sender, moveTasksAfterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveTasksAfterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveTasksAfterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveTasksIntoBacklogItemCompletedEventHandler(object sender, moveTasksIntoBacklogItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveTasksIntoBacklogItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveTasksIntoBacklogItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskWSO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskWSO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeBacklogItemsFromThemeCompletedEventHandler(object sender, removeBacklogItemsFromThemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeBacklogItemsFromThemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeBacklogItemsFromThemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public removeBacklogItemsFromThemeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((removeBacklogItemsFromThemeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void renameThemeCompletedEventHandler(object sender, renameThemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renameThemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal renameThemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public renameThemeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((renameThemeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateBacklogItemCompletedEventHandler(object sender, updateBacklogItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateBacklogItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateBacklogItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public updateBacklogItemResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((updateBacklogItemResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateImpedimentCompletedEventHandler(object sender, updateImpedimentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateImpedimentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateImpedimentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public updateImpedimentResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((updateImpedimentResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateReleaseCompletedEventHandler(object sender, updateReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public updateReleaseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((updateReleaseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateSprintCompletedEventHandler(object sender, updateSprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public updateSprintResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((updateSprintResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateTaskCompletedEventHandler(object sender, updateTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public updateTaskResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((updateTaskResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateTaskEstimateCompletedEventHandler(object sender, updateTaskEstimateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTaskEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTaskEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public updateTaskEstimateResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((updateTaskEstimateResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591